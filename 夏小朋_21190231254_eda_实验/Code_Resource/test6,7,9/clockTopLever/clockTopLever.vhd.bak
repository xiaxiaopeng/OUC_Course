LIBRARY IEEE;
USE Ieee.std_logic_1164.all;
USE ieee.std_logic_unsigned.all;


ENTITY clockTopLever IS
PORT (clk1,CHOOSE_ADD:IN std_logic;
      RESET:std_logic;
      D:OUT std_logic_vector(7 downto 0);
		EN_1,EN_2,EN_3,EN_4:out std_logic);
END clockTopLever;

ARCHITECTURE behavl1 OF clockTopLever IS
component counter_10
PORT 
          (clk,reset:IN std_logic;
           sum:OUT std_logic_vector(3 downto 0);
			  sum_out:OUT std_logic);
END component;
component counter_6
PORT 
          (clk,reset:IN std_logic;
           sum:OUT std_logic_vector(3 downto 0);
			  sum_out:OUT std_logic);
END component;
component counter_10_3
PORT 
          (clk,reset:IN std_logic;
           sum,sum1:OUT std_logic_vector(3 downto 0);
			  sum_out:OUT std_logic);
END component;
component clock_gen
PORT(
      clk:     IN std_logic;
		choose:  IN std_logic_vector(1 downto 0);
      clk_1ms:  OUT std_logic;
		clk_10ms: OUT std_logic;
		clk_1s:   OUT std_logic;
		clk_us:   OUT std_logic);
END component;

component decoder_7
PORT (
      A:IN std_logic_vector(3 DOWNTO 0);
	   Y:OUT std_logic_vector(7 DOWNTO 0));
END component;
component RESET_10_3
PORT (A,B:IN std_logic_vector(3 downto 0);
      C,D:OUT std_logic_vector(3 downto 0));
END component;
component  valid_data
PORT (clk,data:in std_logic;
      validdata:out std_logic);
END component;

SIGNAL clock_s,clock_s1,clock_1,clock_2,clock_2_1,clock_3:std_logic:='0';
SIGNAL sum1,sum2,sum3,sum4:std_logic_vector(3 downto 0):="0000";
SIGNAL number1,number2,number3,number4:std_logic_vector(7 DOWNTO 0);
SIGNAL clk,clk_1ms,clk_10ms,clk_us:std_logic;
SIGNAL SEL,choose1:std_logic_vector(1 downto 0):="00";
SIGNAL CHOOSE_noshake,ADD_noshake,CHOOSE_ADD_noshake:std_logic;
SIGNAL SEL_1:INTEGER RANGE 0 TO 199 :=0;
SIGNAL SEL_2:std_logic;
SIGNAL counter:INTEGER RANGE 0 TO 1000000;
BEGIN




u1:clock_gen port map(clk=>clk1,clk_1s=>clock_s,clk_1ms=>clk_1ms,clk_10ms=>clk_10ms,choose=>choose1,clk_us=>clk_us);
u2:counter_10 port map(clk=>clock_s1,reset=>RESET,sum=>sum1,sum_out=>clock_1);
u3:counter_6 port map(clk=>clock_1,sum=>sum2,reset=>RESET,sum_out=>clock_2);
u4:counter_10_3 port map(clk=>clock_2_1,reset=>RESET,sum=>sum3,sum1=>sum4);
u5:valid_data port map(clk=>clk_1ms,data=>CHOOSE_ADD,validdata=>CHOOSE_ADD_noshake);
u7:decoder_7 port map(A=>sum1,Y=>number1);
u8:decoder_7 port map(A=>sum2,Y=>number2);
u9:decoder_7 port map(A=>sum3,Y=>number3);
u10:decoder_7 port map(A=>sum4,Y=>number4);

PROCESS(CHOOSE_ADD_noshake,clk_1ms,CHOOSE_ADD_noshake,ADD_noshake)
VARIABLE R:INTEGER RANGE 0 TO 10000;
VARIABLE U:INTEGER RANGE 0 TO 1;
BEGIN

IF (CHOOSE_ADD_noshake='0') THEN 
IF( clk_1ms'event AND clk_1ms='1') THEN
IF (R=9999) THEN
R:=0;
ELSE
R:=R+1;
END IF;
END IF;
counter<=R;
ELSE R:=0;
END IF;
END PROCESS;

PROCESS(CHOOSE_ADD_noshake,ADD_noshake)
VARIABLE Q2:std_logic_vector(1 downto 0);
BEGIN
IF counter<500 THEN
ADD_noshake<=CHOOSE_ADD_noshake;
ELSE
IF(CHOOSE_ADD_noshake'event and CHOOSE_ADD_noshake='0') THEN
IF( Q2="10")THEN
Q2:="00";
ELSE
Q2:=Q2+1;
END IF;
END IF;
END IF;
choose1<=Q2;
END PROCESS;




WITH choose1 SELECT
clock_s1<= clock_s     WHEN "00",
           ADD_noshake WHEN "01",
			  '0'        WHEN OTHERS;
			  
WITH choose1 SELECT
clock_2_1<= clock_2     WHEN "00",
           ADD_noshake  WHEN "10",
			  '0'         WHEN OTHERS;


PROCESS (clk_1ms,SEL)
VARIABLE Q: Std_Logic_Vector(1 downto 0);
VARIABLE P:INTEGER RANGE 0 TO 199 :=0;
VARIABLE M:std_logic;
BEGIN 
IF (clk_1ms'event AND clk_1ms='1') THEN
IF (P=199) THEN
P:=0;
ELSE
P:=P+1;
END IF;
IF (M='0') THEN
M:='1';
ELSE
M:='0';
END IF;
IF( Q="11")THEN
Q:="00";
ELSE
Q:=Q+1;
END IF;
END IF;
SEL<=Q;
SEL_1<=P;
SEL_2<=M;
END PROCESS;



PROCESS(SEL,number1,number2,number3,number4,clk_1ms,clk_us)
BEGIN

IF choose1="01" then
IF(SEL_1<100) THEN
CASE SEL IS
WHEN "00"=>D<=number1;EN_1<=clk_us;
WHEN "01"=>D<=number2;EN_2<=clk_us;
WHEN "10"=>D<=number3;EN_3<=clk_us;
WHEN "11"=>D<=number4;EN_4<=clk_us;
END CASE;
ELSE 
CASE SEL IS
WHEN "00"|"10"=>D<=number3;EN_3<=clk_us;
WHEN "01"|"11"=>D<=number4;EN_4<=clk_us;
END CASE;
END IF;
ELSIF(choose1="10") THEN
IF(SEL_1<100) THEN
CASE SEL IS
WHEN "00"=>D<=number1;EN_1<=clk_us;
WHEN "01"=>D<=number2;EN_2<=clk_us;
WHEN "10"=>D<=number3;EN_3<=clk_us;
WHEN "11"=>D<=number4;EN_4<=clk_us;
END CASE;
ELSE 
CASE SEL IS
WHEN "00"|"10"=>D<=number1;EN_1<=clk_us;
WHEN "01"|"11"=>D<=number2;EN_2<=clk_us;
END CASE;
END IF;
ELSE 
CASE SEL IS
WHEN "00"=>D<=number1;EN_1<=clk_us;
WHEN "01"=>D<=number2;EN_2<=clk_us;
WHEN "10"=>D<=number3;EN_3<=clk_us;
WHEN "11"=>D<=number4;EN_4<=clk_us;
END CASE;

END IF;

END PROCESS;



END behavl1;


